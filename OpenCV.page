---
categories: image_processing
...

# Template matching

OpenCV has ability to search template image in a larger image (FFT convolution?). 

* [Template matching tutorial](https://docs.opencv.org/trunk/d4/dc6/tutorial_py_template_matching.html)


# Human detection

* [Skin detection](https://www.pyimagesearch.com/2014/08/18/skin-detection-step-step-example-using-python-opencv/) 
```python
lower = np.array([0, 48, 80], dtype = "uint8")
upper = np.array([20, 255, 255], dtype = "uint8")
cv2.inRange(img_hsv,lower,upper)
# + some mask erosion and dilation
```
Much better results are expected with grabcut

* [Hand detection: github c code](https://github.com/bengal/opencv-hand-detection)


# Camera matrix and 3d reprojection

General projection transformation:

$$
\begin{array}{lcl}
x_{img}  & = & \frac{f_x x}{z}+c_x \\
y_{img}  & = & \frac{f_y y}{z}+c_y
\end{array}
$$

In projective coordinates this can be rewritten in the following way

$$
\left(
\begin{array}{l}
x_{img} \\
y_{img} \\
w
\end{array}
\right) =
\left(
\begin{array}{lll}
f_x & 0 & c_x\\
0 & f_y & c_y \\
0 & 0 & 1
\end{array}
\right)
\left(
\begin{array}
x \\
y \\
z
\end{array}
\right)
$$ 

The matrix 
$$
 \left(
\begin{array}{lll}
f_x & 0 & c_x\\
0 & f_y & c_y \\
0 & 0 & 1
\end{array}
\right)
$$ 

is known as camera matrix.

The result of ```stereoCalibrate``` at some stage is the following matrix
$$
Q=\left(
\begin{array}{cccc}
 \frac{1}{f_x} & 0 & 0 & -\frac{c_x}{f_x} \\
 0 & \frac{1}{f_y} & 0 & -\frac{c_y}{f_y} \\
 0 & 0 & 0 & 1 \\
 0 & 0 & \frac{1}{L f_x} & 0 \\
\end{array}
\right) = 
\left(
\begin{array}{cccc}
 f_x & 0 & c_x & 0 \\
 0 & f_y & c_y & 0 \\
 0 & 0 & 0 & L f_x \\
 0 & 0 & 1 & 0 \\
\end{array}
\right)^{-1}.
$$
This matrix can be input to ```perspectiveTransform``` or whatever.

Perspective transform etc, functions in openCV are somewhat broken see [this stackoverflow answer](https://stackoverflow.com/questions/45817325/opencv-python-cv2-perspectivetransform) (need array with dimensions (1,1,3) to represent initial point).

