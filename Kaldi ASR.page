---
categories: speech_recognition
...

* [Main site](http://kaldi-asr.org/)
* [Github link](https://github.com/kaldi-asr/kaldi/)
    * [Recipies for voxforge](https://github.com/kaldi-asr/kaldi/)
    * [Models](http://kaldi-asr.org/models.html)

* [Useful thesis describing some inner work of Kaldi](www.diplomovaprace.cz/133/thesis_oplatek.pdf)  Saved in papers
* [Offline transcriber for Estonian based on Kaldi alumae](https://github.com/alumae/kaldi-offline-transcriber) Use makefiles and some ad-hoc libraries in Java, python, etc.

# User friendliness of Kaldi community

* [Thread in mail group](https://groups.google.com/forum/#!topic/kaldi-help/xs4wSKSK3vk)

Summary: 
We could probably add a page with documentation for people who don't know about speech recognition, but I don't put a high priority on it right now, as I am working on speed and accuracy improvements that are likely to have much more impact (and would also invalidate some of the documentation).
Also, without the kind of deep understanding that can only come from years of experience (or access to such a person), people like you are bound to run into problems that can't be fixed without help from someone more experienced.  It becomes unsustainable for me because there become too many questions.
There are plenty of students or other people out there who would be quite able to show you what to do and give you the help you need; they just don't have experience in setting up consulting arrangements; and in addition the bulk of them are either overseas or they don't have the type of visa that would allow them to officially work in the US.  You would have to help them navigate these issues somehow.  I can give you some names if you want, or vet people who contact you.

# Some concepts

## Lattice decoder

Lattice apparently something that has multiple possible decoding path in it. 

Lattice
: The lattice is a finite-state transducer whose input and output labels are whatever labels were on the FST (typically transition-ids and words, respectively), and whose weights contain the acoustic, language model and transition weights

## Decoders

Not every decoder generate fully fledged lattice

* Simple
    * gmm-decode-simple
* Faster
    * gmm-decode-faster
* Lattice generating

gmm-decode-kaldi

gmm-decode-faster-fmllr ??

### gmm-latgen-faster

```gmm-latgen-faster [opts] <model-in> <fst-in|fst-rspecifier> <features-rspecifier> <lattice-wspecifier>```

```<model-in>``` is a file of type ```*.mdl```

Example of usage

```{.bash}
feats="ark,s,cs:apply-cmvn $cmvn_opts --utt2spk=ark:$sdata/JOB/utt2spk scp:<script file>"
# ark,s,cs -- s,cs means keys sorted on input
gmm-latgen-faster --beam=$beam=13.0 \
                  --lattice-beam=$lattice_beam=6.0 \
                  --acoustic-scale=$acwt=0.08333 \
                  --allow-partial=true \
                  --word-symbol-table=${graphdir}/words.txt=exp/tri1/graph/words.txt \
                  $model=${srcdir}/final.mdl=exp/tri1/final.mdl
                  $graphdir/HCLG.fst
                  "$feats"
                  "ark:gzip -c $dir/lat.JOB.gz"="ark:gzip -c exp/tri1/decode/lat.0.gz"

```                  

## Processing after decoding

```
lattice-best-path --lm-scale=11 --word-symbol-table=exp/tri2b/graph/words.txt "ark:gunzip -c exp/tri2b/decode/lat.*.gz|" ark,t:- 1>/dev/null
```

This generates '*.tra' files.

The '*.tra' files can be further processed with perl script ```int2sym.pl```