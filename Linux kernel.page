---
categories: linux, kernel
...

# Kernel modules

## Writing kernel module for raspberry pi

* [GPIO interrupts in kernel on raspberry pi](http://morethanuser.blogspot.hu/2013/04/raspbery-pi-gpio-interrupts-in-kernel.html) (I used this while writing geiger counter module)
    * [Derek Molloy Kernel gpio buttons and leds](http://derekmolloy.ie/kernel-gpio-programming-buttons-and-leds/)
* [The Linux Kernel Module Programming Guide](http://www.tldp.org/LDP/lkmpg/2.6/html/lkmpg.html)
* [Rpi kernel module for interrupt management](https://www.disk91.com/2015/technology/systems/rf433-raspberry-pi-gpio-kernel-driver-for-interrupt-management/)
* [Compiling modules for rpi](http://bchavez.bitarmory.com/archive/2013/01/16/compiling-kernel-modules-for-raspberry-pi.aspx)

Kernel compilation See [Rpi kernel complilation: Cross compiling from Linux](http://elinux.org/Raspberry_Pi_Kernel_Compilation#2._Cross_compiling_from_Linux)

```bash
cd ${HOME}/rpi
git clone ssh://git@github.com/raspberrypi/tools.git
export CCPREFIX=${HOME}/rpi/tools/arm-bcm2708/arm-bcm2708-linux-gnueabi/bin/arm-bcm2708-linux-gnueabi
cd linux/
cp arch/arm/configs/bcmrpi_defconfig .config
make ARCH=arm CROSS_COMPILE=${CCPREFIX} menuconfig
make ARCH=arm CROSS_COMPILE=${CCPREFIX}
cd ..
git clone git://github.com/raspberrypi/firmware.git
#cd firmware/
export MODULES_TEMP=/home/adamov/rpi/modules
make ARCH=arm CROSS_COMPILE=${CCPREFIX} INSTALL_MOD_PATH=${MODULES_TEMP} modules_install
```
Some notes on configuring [here](http://elinux.org/RPiconfig)


In module directory create Makefile. Guide to writing makefile -- kernel doc [https://www.kernel.org/doc/Documentation/kbuild/modules.txt](https://www.kernel.org/doc/Documentation/kbuild/modules.txt) How to Build External Modules


```make
# my optional module name
MODULE=geiger_module
 
# this two variables, depends where you have you raspberry kernel source and tools installed
 
CCPREFIX=/home/adamov/rpi/tools/arm-bcm2708/arm-bcm2708-linux-gnueabi/bin/arm-bcm2708-linux-gnueabi-
KERNEL_SRC=../linux #PATH to the kernel source
 
 
obj-m += ${MODULE}.o
 
module_upload=${MODULE}.ko
 
all: clean compile
 
compile:
	make ARCH=arm CROSS_COMPILE=${CCPREFIX} -C ${KERNEL_SRC} M=$(PWD) modules
 
clean:
	make -C ${KERNEL_SRC} M=$(PWD) clean
 
 
# this just copies a file to raspberry
install:
	scp ${module_upload} ${HOME}/rpi/modules/
 
info:
	modinfo  ${module_upload}

```

Date and time inside module [Stackoverflow: getting date and time in linux kernel space ](http://stackoverflow.com/questions/5077192/how-to-get-current-hour-time-of-day-in-linux-kernel-space)


## Comprehensive kernel module writing guide

* [The Linux Kernel Module Programming Guide](http://tldp.org/LDP/lkmpg/2.6/html/index.html)


# Kernel debug

[Kernel debug]()

# Interesting kernel resources

[0xAX linux-insides](https://github.com/0xAX/linux-insides)
