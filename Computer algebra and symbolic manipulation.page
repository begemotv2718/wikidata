---
categories: mathematics,algebra,programming
...

# Theory

* [Risch algorithm -- symbolic integration](https://en.wikipedia.org/wiki/Risch_algorithm)

# Packages

## SageMath

* [Example of use: Alon Amit answer on solving polynomial in radicals](https://www.quora.com/How-do-I-solve-the-polynomial-x-5-x-4-16x-3-5x-2-21x-9-0-with-no-approximation)
* [Online](http://sagecell.sagemath.org/?lang=sage&z=eJzz1rNJtLP1K81NSi1yy0zNSdGoiDPVrogz0TU006qIM9Y2BZJG2kaGWhW6lpq8XO623nrpiTn5mcXx6UX5pQUaeYm5qcW2SpVKIEm9_KKU1CINTQBpdBnW)
* [Download](ftp://ftp.fu-berlin.de/unix/misc/sage/linux/64bit/index.html)

## Misc 

*  Online [desmos.com: Example anymated area under curve](https://www.desmos.com/calculator/d3bvpv4smw)
*  [Sympy symengine](https://github.com/symengine) -- Symbolic math for various languages (including haskell). Recommended for good cpp style. Claimed performance is much higher than for Mathematica.

## Sympy

* [Converting latex to sympy](https://github.com/augustt198/latex2sympy) latex2sympy (Use [AntLR](http://www.antlr.org/) inside). I.e. ANTLR has python parser generator.

## Misc

* [Python equation interpreter](https://pythonhosted.org/Equation/#example)

# See also

* [Jupyter notebooks]()