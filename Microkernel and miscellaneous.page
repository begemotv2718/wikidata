---
categories: OS
...

# L4 based systems

Wikipedia [L4 microkernel family](https://en.wikipedia.org/wiki/L4_microkernel_family)

seL4 is the first fully verified microkernel. Implemented in C, proof of conformance done with [Haskell]()

[FAQ](https://wiki.sel4.systems/FrequentlyAskedQuestions)

seL4 can be installed on raspberry pi 3 [seL4 on the Raspberry Pi 3](https://research.csiro.au/tsblog/sel4-raspberry-pi-3/)

[seL4 manual in pdf](https://www.cse.unsw.edu.au/~cs9242/16/project/sel4-manual.pdf)

## SeL4 tutorial

* [Tutorial page](https://wiki.sel4.systems/Tutorials)
* command ```repo init -u https://github.com/SEL4PROJ/sel4-tutorials-manifest -m sel4-tutorials.xml```
* After that ```ln -s projects/sel4-tutorials/exercises apps```
* Things to do ```projects/sel4-tutorials/docs/seL4-APILib-details.pdf```

## IRC

```
/server irc.freenode.net
/join #seL4
```


## Licensing

GPL v2

# Genode project

[genode project](https://genode.org/) provides framework (think GNU in GNU/Linux) for working with microkernels


# Rust and Redox

Redox is an OS written in [Rust](). Since Rust does not allow buffer overflow, this OS is supposed to be proof from bufferoverflow attacks.
 
* [Redox on github](https://github.com/redox-os)
* [Homepage](https://www.redox-os.org/)

## Licensing

MIT


# Haskell operating systems

## Osker

* [Github](https://github.com/PeterDWhite/Osker)

## House

* [Homepage](http://programatica.cs.pdx.edu/House/)