---
format: Markdown
categories: programming
...

* [Functional programming]()
* [Git/github cheatsheets]()
* [Xmonad cheatsheets]()
* [X windows cheatsheets]()
* [Linux]()
* [Networking]()
* [Constraint optimization]()

# Languages 

* [Perl]()
* [Haskell]()
* [Prolog]()

# Automatic verification

## Static analysis tools

* [Facebook infer](http://fbinfer.com/)
    * [Installation](http://fbinfer.com/docs/getting-started.html) [github](https://github.com/facebook/infer)
    * [Some background](https://code.facebook.com/posts/1648953042007882/open-sourcing-facebook-infer-identify-bugs-before-you-ship/)
         * [Separation logic](http://fbinfer.com/docs/separation-logic-and-bi-abduction.html#biabduction)
         * [Hoare logic](https://en.wikipedia.org/wiki/Hoare_logic)

## Rosette

[Link](https://emina.github.io/rosette/)

Rosette is a solver-aided programming language that extends Racket with language constructs for program synthesis, verification, and more. To verify or synthesize code, Rosette compiles it to logical constraints solved with off-the-shelf SMT solvers. By combining virtualized access to solvers with Racketâ€™s metaprogramming, Rosette makes it easy to develop synthesis and verification tools for new languages. You simply write an interpreter for your language in Rosette, and you get the tools for free!

## Parsing tools

* [Python C parser -- github](https://github.com/albertz/PyCParser)

# Compilers

## C compiler

* sdcc
    * [sdcc design document -- pdf](https://web.archive.org/web/20090617011643/http://www.circuitcellar.com/SA/Articles2/Dutta-121.pdf)
    * [sdcc MCU simulation](https://sourceforge.net/p/sdcc/code/HEAD/tree/trunk/sdcc/sim/ucsim/stm8.src/inst.cc)

# Linking

## Overlinking and underlinking

* [Overlinking](http://wiki.rosalab.ru/ru/index.php/Overlinking) -- when a binary depend on libraries that is actually a dependence of its other libraries but not of the binary itself (emacs depends on libpng, libpng depends on libz, emacs should not depend on libz by itself, otherwise it is overlinked).
* [Underlinking](http://wiki.rosalab.ru/ru/index.php/Underlinking)
* [as-needed](https://wiki.gentoo.org/wiki/Project:Quality_Assurance/As-needed)

The --as-needed flag is passed to the GNU linker (GNU ld ). The flag tells the linker to link in the produced binary only the libraries containing symbols actually used by the binary itself. This binary can be either a final executable or another library.

In theory, when linking something, only the needed libraries are passed to the command line used to invoke the linker. But to workaround systems with broken linkers or not using ELF format, many libraries declare some "dependencies" that get pulled in while linking. A simple example can be found by looking at the libraries declared as dependencies by gtk+ 2.0

## API vs ABI

[API vs ABI: stackoverflow](http://stackoverflow.com/questions/2171177/what-is-application-binary-interface-abi)

# Graphics

## 3D

* [MeshLab](http://www.meshlab.net/#features)
    * Voronoi tesselation
        * [Creating voronoi sphere](http://meshlabstuff.blogspot.com.by/2009/03/creating-voronoi-sphere.html)
        * [Voronoi tetrahedron](http://www.thingiverse.com/thing:140277)
        * [Klein bottle](http://www.thingiverse.com/thing:145694)

# CAD


## QCad

2D engineering drawing package based on Qt
Looks to be quite buggy and slow

* [wikipedia](https://en.wikipedia.org/wiki/QCad)
* [Github](https://github.com/qcad/qcad)
* [Compiling from source](http://www.qcad.org/en/component/content/article/78-qcad/111-qcad-compilation-from-sources#linux)


# More specific software

* [Wireshark]()
* [Vim]()
* [Ssh]()
* [XML and XSL]()

# Personal projects

* [Sphinx train]()
* [Maple-mini water meter logging]()
* [Maple-mini pwm current]()

# General blah-blah

## Suck less

* [suckless.org](http://suckless.org)
* [Why UML sucks](https://archive.eiffel.com/doc/manuals/technology/bmarticles/uml/page.html)

# See also

[Speech recognition]()