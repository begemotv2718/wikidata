---
categories: linux, kernel, debug
...

# Netconsole

Since modern notebooks does not have COM or UART ports (or these ports are well hidden) there is a tool that provides quite low level network logging on ethernet interface. 

The main sources of wisdom:

* [Debian: debugging system freeze](https://debian-administration.org/article/492/Debugging_system_freezes)
* [Using netconsole to see kernel messages](http://web.archive.org/web/20080616135606/http://www.coraid.com/support/cln/CLN-HOWTO/ar01s09.html)

## Debugging freezing issue

Create a  file in  ```/etc/modprobe.d/``` containing the following line

```options netconsole netconsole=32769@192.168.1.1/eth1,32769@192.168.1.6/01:23:34:56:78:9A```

Here

* 192.168.1.1 -- desired address of our computer
* eth1 -- ethernet interface
* 32769 -- port (UDP)
* 192.168.1.6 -- address of the logger machine
* 01:23:34:56:78:9A -- mac address of the logging machine or mac address of the router if the logging machine is not in the same network.

Start netconsole with ```modprobe netconsole```. Debian stock kernels have support for this.

## Debugging startup issue

Add the ```netconsole=32769@192.168.1.1/eth1,32769@192.168.1.6/01:23:34:56:78:9A``` line to the kernel command line. I assume that we also need to pack corresponding module into initrd.

# Tracing of syscalls/etc

* [Brendan Gregg: Chosing a linux tracer](http://www.brendangregg.com/blog/2015-07-08/choosing-a-linux-tracer.html)
    * Ftrace
    * perf-events (linux-tools-common package). Exposed as ```perf``` tool
    * eBPF (in development)
    * SystemTap -- requires compiling modules.
    * LTTng -- out of tree tracer
    * ktap (in development)
    * dtrace4linux -- license incompatibility, slow development
    * Oracle Linux dtrace -- requires oracle linux
    * sysdig

## ftrace

Talk on ftrace interface is on youtube [Kernel Recipes 2017 - Understanding the Linux Kernel via Ftrace - Steven Rostedt - YouTube](https://www.youtube.com/watch?v=2ff-7UTg5rE).

Main points:

* Work without any tools, but need to be enabled on kernel compilation
* Debian has this enabled, although it might be a security issue
* Files under ```/sys/kernel/debug/tracing/```
* Important files in this directory
    * ```README``` (help)
    * ```current_tracer``` (set to nop by default) ```echo function > current_tracer```
    * ```available_tracers``` -- function, function_graph, mmiotrace -- good to rev engineer proprietary drivers
    * ```set_ftrace_filter``` -- limit tracing to function
    * ```echo 0 > tracing_on``` stop tracing without erazing trace file

# Debug kernel startup in KVM

* [Some tips](https://rwmj.wordpress.com/2016/04/21/tip-poor-mans-qemu-breakpoint/) Most important beside using ```set architecture i8086``` is using ```hbreak``` instead of ```break```.

# Virtme: tool for kernel testing with kvm

* [Virtme: The kernel developers' best friend](https://www.collabora.com/news-and-blog/blog/2018/09/18/virtme-the-kernel-developers-best-friend/)