---
categories: programming,mathematics,math
...

# Summary

Here I would like to collect information on various constraint optimization problems. I used to have a research direction on this topic (started from automatic poetry generation toy task).

* [Python constraint optimization solver](http://labix.org/python-constraint#head-ac04c8e8bcd72bda1fb01e8823e60e21d79bf8a3)

* [Rosette](https://emina.github.io/rosette/) -- programming language interface for SMT/SAT solvers. [Talk by creator](https://www.youtube.com/watch?v=G2kx1aFpT6M). 
     * rule system verification
     * rule system synthesis
     * etc.
     * Initial inspiration: MemSAT, [MIT Alloy](http://alloy.mit.edu/alloy/), Kodkod (efficient solver for alloy?)

* [Sergiy Dymchenko: Solving greater than sudoku](http://sdymchenko.com/blog/2015/01/04/greater-than-sudoku-clp/) -- constraint solver
* [ECLiPSe: constraint solver](http://www.eclipseclp.org/)


# Prolog

[Prolog]()

## B-prolog

B-Prolog, is a Prolog based Constraint Logic Programming System. Compared to traditional Prolog systems, B-Prolog has some extensions which makes constraint modelling easier: 

* [Dynamic programming solution for Facebook Hacker Cup problem "AAAAAA" in B-Prolog](http://sdymchenko.com/blog/2014/12/09/aaaaaa-bprolog/)
* [Hakan Kjellerstrand B-Prolog page](http://www.hakank.org/bprolog/)
* [B-prolog official page (note that links on the sites above are incorrect](http://www.picat-lang.org/bprolog/)