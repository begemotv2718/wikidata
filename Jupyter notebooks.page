---
categories: visualization,python
...

# Presentations in jupyter notebooks

* [Medium: Presenting Code Using Jupyter Notebook Slides](https://medium.com/@mjspeck/presenting-code-using-jupyter-notebook-slides-a8a3c3b59d67)
     * View → Cell Toolbar → Slideshow
* [Example slideshow](http://www.slideviper.oquanta.info/tutorial/slideshow_tutorial_slides.html#/)
* [github: Extension for live computation in slideshow](https://github.com/damianavila/RISE)

# Interactive manipulations

* [Using interact](https://ipywidgets.readthedocs.io/en/stable/examples/Using%20Interact.html)
* [Video presentation on youtube](https://www.youtube.com/watch?time_continue=27&v=FYnM84TgzZU)
* [Interactive visualizations in jupyter notebooks](https://towardsdatascience.com/interactive-visualizations-in-jupyter-notebook-3be02ab2b8cd)

# LaTeX related stuff

* LaTeX is supported in notebooks. (Not clear if %%latex is needed). Enter with double dollar surrounding, mark cell as markdown, Shift-Enter in the cell.
* Printing python expressions as LaTeX: 
```python
from prettyPy import prettyPy as pp
pp.pretty('varepsilon_x=a^2+b^2')
```

# Wolfram language in notebooks

* [Stack overflow discussion](https://mathematica.stackexchange.com/questions/198839/how-to-add-a-front-end-to-the-free-wolfram-engine/199127#199127)

Apparently it is possible to download a free version of Wolfram engine and use it with the jupyter notebook.

* [Wolfram language for developers free download](http://www.wolfram.com/engine/)
* [Github wolfram language for jupyter](https://github.com/WolframResearch/WolframLanguageForJupyter)

# Related projects

* [SMath studio](https://en.smath.info/view/SMathStudio/summary) More engineering style notebooks

# See also

* [Computer algebra and symbolic manipulation]()
* [Graphing]()
