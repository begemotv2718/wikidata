---
categories: fpga, hardware
...


# Design languages

## SpinalHDL

[SpinalHDL] -- Scala extension compilable to verilog/vhdl.

Resources

* [Github](https://github.com/SpinalHDL/SpinalHDL)
* [Online documentation](https://spinalhdl.github.io/SpinalDoc)
* [Base project](https://github.com/SpinalHDL/SpinalBaseProject)


# Open source tools

## VHDL and Verilog compilers

* ghdl + yosis
* [Verilog to routing (Odin-II)](https://github.com/verilog-to-routing/vtr-verilog-to-routing)

## IceStorm 

* [Their web page](http://www.clifford.at/icestorm/) -- idea is reverse engineering of bitstream format for lattice semiconductors [ice stick](http://www.latticesemi.com/icestick).
* [yosis](http://www.clifford.at/yosys/)
* [arachne-pnr](https://github.com/cseed/arachne-pnr) -- open source fpga routing 
    * Newer tool is called [nextpnr](https://github.com/YosysHQ/nextpnr)
* It uses ghdl front-end for compiling vhdl 
    * [ghdlsynth-beta](https://github.com/tgingold/ghdlsynth-beta)
    * [ghdl](https://github.com/tgingold/ghdl)


### Sequence of compilation

```
ghdl -a leds.vhdl 
ghdl -a blink.vhdl # add sources
yosys -p 'ghdl leds; synth_ice40 -blif leds.blif' # ghdl{frontend command} leds{unit name}; synth_ice40{synthesis script} leds.blif{output file}
arachne-pnr -d 1k -o leds.asc -p leds.pcf leds.blif # -d 1k {device} leds.asc {output} leds.pcf { pinout constrain, same as for Xilinx }
icepack leds.asc leds.bin
iceprog leds.bin
```


## hdl-make
* [reference](http://www.ohwr.org/projects/hdl-make) -- aim to provide makefile generator for hdl. Have web interface and seems to aim to replace ide, like Xilinx one

## FPGA and VLSI

* [Opencircuitdesign](http://opencircuitdesign.com)
    * [Qflow](http://opencircuitdesign.com/qflow/index.html) Frontend for verilog compilation and synthesis. 
    * [Qrouter](http://opencircuitdesign.com/qrouter/index.html) route metalization layer from the LEF file (cell definition) DEF file (netlist).
    * [IRSIM Switch level simulator](http://opencircuitdesign.com/irsim/index.html)

## Xilinx FPGA reverse engineering

* [Project X-ray](https://github.com/SymbiFlow/prjxray-db) -- reconstruction of bitstream format using fuzzing and other automated methods
    * [Some results](https://symbiflow.github.io/prjxray-db/) Chips in current analysis: artix7, kintex7 and zynq7 families.

# Repositories of open hardware

* [ohwr](http://www.ohwr.org/projects/)
* [librecores](https://www.librecores.org/)
* [Opencores](https://opencores.org/)

## Libraries

* [FFT](https://github.com/capitanov/fp23fftk/)


# Software defined radio and FPGA

[Software defined radio and FPGA]()

# FPGA tutorials

* [Livejournal Yury Panchul](http://1i7.livejournal.com/11571.html) -- Making MIPS processor with links to previous tutorials
* [The same Livejournal, tags: verilog](http://1i7.livejournal.com/tag/verilog)

# FPGA acceleration

* [FPGA accelerated programming]()

# FPGA programmators

## Marsohod project

* [habr Программатор для ПЛИС](https://geektimes.ru/post/253800/)
    * Use FTDI FT2232HL and [93C46 spi flash](http://www.alldatasheet.com/datasheet-pdf/pdf/74910/MICROCHIP/93C46.html)
    * [Schematics](https://marsohod.org/index.php/ourblog/11/170-mbfdti)
    * [Repository](https://github.com/marsohod4you/MBFTDI-SVF-Player)
    * Works by playing SVF (Serial Vector Format) to jtag. 
    * See [USB]() for FTDI chip interface references

# Hardware

* [RggBer: open computer vision board Altera cyclone](https://www.hackster.io/RggBer/rggber-born-for-embedded-vision-24f7b5?ref=explore&ref_id=recent___&offset=6)
* [Sipeed TANG Hex: A Raspberry Pi-Inspired FPGA - Hackster.io](https://www.hackster.io/news/sipeed-tang-hex-a-raspberry-pi-inspired-fpga-e6eba3861af3) Seems to be around 70 EUR
* ["ZynqBerry" - Zynq-7010 in Raspberry Pi form factor | Trenz Electronic GmbH Online Shop (EN)](https://shop.trenz-electronic.de/en/TE0726-03M-ZynqBerry-Module-with-Xilinx-Zynq-7010-in-Raspberry-Pi-Form-Faktor)

# Clash: haskell for hardware

* [Clash -- haskell for hardware]()

