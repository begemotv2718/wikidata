---
categories: programming, programming_languages, haskell
...

* [House: operating system in Haskell](http://programatica.cs.pdx.edu/House/)
* [Juick channel on Haskell](http://juick.com/tag/Haskell)
* [Hoogle -- haskell search engine](https://www.haskell.org/hoogle/) [Github](https://github.com/ndmitchell/hoogle) [Installing locally](https://github.com/ndmitchell/hoogle/blob/master/docs/Install.md)
* [Hayoo -- haskell api search](http://hayoo.fh-wedel.de/)

# Mathematics in Haskell

* [Kleene algebra and Haskell](http://r6.ca/blog/20110808T035622Z.html) -- not sure it was famos paper about Gauss elimination algorithm equal to Floyd-Warshall (also referenced in [Algorithms]() ) Here is more extended version (in pdf) [Fun with Semirings A functional pearl on the abuse of linear algebra](www.cl.cam.ac.uk/~sd601/papers/semirings.pdf)
* [Abstract power series and lazy evaluation](http://www.cs.dartmouth.edu/~doug/powser.html)
* [Beautiful differentiation](http://conal.net/papers/beautiful-differentiation/)

# Haskell and other languages

## Cross-compiling to javascript

* [AwesomePrelude](http://tom.lokhorst.eu/2010/02/awesomeprelude-presentation-video)
* [Haskell in the web](http://ru-lambda.livejournal.com/131542.html) see especially [Ur/Web](http://www.impredicative.com/ur/)

## Scheme

* [Write yourself a scheme in 48 hours](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)

## Prolog and Haskell

* [Prolog in Haskell]()

# Tools

* [hsenv -- analog of virtualenv](https://hackage.haskell.org/package/hsenv)
* Stack tool (seems to be related in usage to hsenv)
    * [Tool description](https://docs.haskellstack.org/en/stable/README/)
    * [Yaml configuration](https://github.com/commercialhaskell/stack/blob/release/doc/yaml_configuration.md)

# Embedded languages in Haskell

Languages compilable to C

* [Ivory]() Ivory is well suited for writing programs which interact directly with hardware and do not require dynamic memory allocation.
* [Atom](http://hackage.haskell.org/package/atom) -- Language for realtime bare-metal systems

# See also

* [Mathematics]()
* [Functional programming]()
