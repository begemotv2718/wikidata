---
categories: hardware,cnc
...

# CNC projects

* [mechmate](http://www.mechmate.com/)
* [openbuilds.com](http://openbuilds.com/)

# 3d printing

* [3D printing]()

# Models (via hs telegram)

* Caligator - http://base3d.ru/CaliGator/
* Thingiverse - http://www.thingiverse.com/
* Shapeways - https://www.shapeways.com/
* Cookie Caster - http://www.cookiecaster.com/
* Lithophane - http://3dp.rocks/lithophane/
* YouMagine - https://www.youmagine.com/
* STLFinder - https://www.stlfinder.com/
* My Mini Factory - https://www.myminifactory.com/
* Yeggi - http://www.yeggi.com/
* GrabCad - https://grabcad.com/
* Turboaquid - https://www.turbosquid.com/
* Instructables - http://instructables.com/
* NASA 3D Resources - https://nasa3d.arc.nasa.gov/
* 3D Warehouse - https://3dwarehouse.sketchup.com/
* Smithsonian - https://3d.si.edu/
* ShareCG - http://www.sharecg.com/
* All3DP - https://www.all3dp.com/
* 3DExport - https://de.3dexport.com/
* 3DContentCentral - https://www.3dcontentcentral.com/
* 3DShook - http://www.3dshook.com/
* SketchFab - https://sketchfab.com/
* Tinkercad - https://www.tinkercad.com/
* Evermotion - https://evermotion.org/downloads/
* Blendswap - https://www.blendswap.com/
* 3DModelfree - http://www.3dmodelfree.com/
* Yobi3D - https://www.yobi3d.com/
* ThreeDscans - http://threedscans.com/
* BlankRepository - https://www.blankrepository.com/
* 3ddigitaldoubles - http://3ddigitaldoubles.com/
* Pixellabs - https://www.thepixellab.net/freebies/

# Laser cutter

* [Laser cutter models]()

## Necessary laser power estimations

Main mechanisms of energy drain

### Radiation

### Air convection

### Thermal conductivity

* [Thermal conductivity for common materials](http://www.engineeringtoolbox.com/thermal-conductivity-d_429.html)

## Shopping

* [Лазерные трубки в Минске](http://equitechno.deal.by/g902493-lazernye-trubki-so2)
* [Aliexpress](https://ru.aliexpress.com/item/ZG-high-quality-length-1250-mm-diametr-80mm-80W-CO2-laser-tube-for-CO2-laser-engraving/32438341854.html?spm=2114.10010208.1000022.1.selq4y&isOrig=true#extend) -- expensive shipping

# CNC Firmware

* Port of grbl to STM32F103 [original](https://github.com/usbcnc/grbl), [maybe? enhanced](https://github.com/yaroslavVl/6-AXIS-USBCNC-GRBL) (enhancement includes adding more axes, but removed makefile) [description of enhancement](http://robomechs.com/grbl-1-1-smt32f103c8t6/)
    * Some g-code senders from there [Simple, but C# nevertheless](https://github.com/OttoHermansson/GcodeSender) [Sophisticated one (Java)](https://winder.github.io/ugs_website/) [Another sophisticated C#](https://github.com/martin2250/OpenCNCPilot)

* [habr: STM32F103 firmware for CNC machine](https://habrahabr.ru/post/250677/) [Source codes](https://docs.google.com/open?id=0B3hH5_ZXlbvwY2RIUnZwZGhGZXM) [Author comments](http://www.cnczone.ru/forums/index.php?showtopic=3334)

Source code description

считывание строк из файла - gcode_exec.c
точка входа в обработку строки gc_execute_line(..) gcode.c. В этой функции выполняется разбор и преобразование к внутренним координатам с вызовом
cnc_line(...) ->smothLine(..)

smothLine, используя циклический буфер на 3 перемещения полученных из g-code, резбивает текущее перемещение на N отрезков исходя из конфгурационных параметров (максимальная скорость, ускорение и пр.) и вызывает sendLine() для каждого отрезка.
sendLine() выполняет необходимые действия (вывод на экран, отладка и пр.) и заполняет очередь на обработку вызовом
stepm_addMove()/ stepmotor.c /steps_buf[STEPS_BUF_SZ];
генерация шагов выполняется по таймерам (по одному на каждый шаговик). Функция stepm_proc(), вызываемая обработчиком прерывания каждого таймера вычерпывает очередную порцию из очереди и задает частоту таймеров, синхронизируя их заодно.

Основное отличие от типичного подхода с плавающим шагом step (плавным) - ступечатое изменение частоты (скорости).
Это упрощение позволяет использовать целочисленое интегрирование и уменьшает вычислительные затраты в целом.
Как показали эксперименты, при выводе отрезков с разной скоростью и маленькой dV (экспериментально подобрано в gcode.h) потерь шагов нет и на слух не слышно. Визуально - плавное торможение/разгон.
Под другой станок скорее всего понадобится адаптация. В принципе, есть конфиг файл, но я его не отлаживал.

За то времени на вывод на экран и пр. остается масса.
Попытка применения классического варианта с исходниками от grbl (Sungeun K. Jeon) и тех, что есть в Linux-CNC показала, что на высоких скоростях - не тянет проц. double библиотека для данного проца тормозная.
А отставание расчета очередного значения и пауза даже в несколько msec приводит к очень неприятным "звукам/ударам" и потере координаты. Так что от классического подхода я ущел. Может быть и в нем можно что то было вылизать оптимизировать. Но, захотелось попробовать другое. Плопробовал - работает.

# G-codes

* [Some useful g-code list](http://www.shapeoko.com/wiki/index.php/G-Code)
* [LinuxCNC gcodes](http://www.linuxcnc.org/docs/2.5/html/gcode/gcode.html#sec:G2-G3-Arc)

## Most useful G-codes

| Code | Example | Meaning    |
|------|---------|------------|
| G0   | G0 X10.0 Y20.0 | Move to position (as fast as possible) |
| G1   | G1 X20.0 Y20.0 F100.0 | Linear motion to position with given feed rate |
| G2   |                       | Circular motion |
| G28  |                       | Go home          |
| G21  |                       | Set units to mm  |
| M3   |                       | Switch tool on  clockwise |
| M4   |                       | Tool on counter-clockwise |
| M5   |                       | Stop tool                 |

## Convert vector image to G-code

* [Stackoverflow: How do you convert svg to gcode](https://www.quora.com/How-do-you-convert-svg-to-gcode)
    * [Inkscape plugin](http://www.cnc-club.ru/forum/viewtopic.php?f=15&t=35&start=20#p194)
    * [svg2gcode for hipsters](https://github.com/em/svg2gcode)
* [Easel(via Flop)](https://www.inventables.com/technologies/easel)